version: 2.1

commands: # a reusable command with parameters
  greeting:
    parameters:
      to:
        default: "world"
        type: string
    steps:
      - run:
          name: Greetings
          command: echo "Hello << parameters.to >>"
      
jobs:
  messer:
    parameters:
      laconditionouioui:
        description: Set in Project Seetings
        type: env_var_name
        default: condition_needed
        
      anothercondition:
        description: Set durinng the build
        type: env_var_name
        default: other_condition
        
    docker:
      - image: circleci/node
    steps:
      - run :
          name: Checking parameters values
          command: |
              echo "This is the env var set in Project Settings"
              echo ${<< parameters.laconditionouioui >>}
              
              echo "Setting the other env var now"
              echo 'export other_condition="true"' >> $BASH_ENV
              source $BASH_ENV
              echo ${<< parameters.laconditionouioui >>}

      - when:
          condition:
            equal: [ true, "${<< parameters.laconditionouioui >>}" ]
          steps:
            - run:
                name: Testing logic statemet with env_var_name
                command: |
                  echo "It should be working... Is it?"
                  echo ${<< parameters.laconditionouioui >>}
                  
      - when:
          condition:
            equal: [ true,  "${<< parameters.anothercondition >>}"]
          steps:
            - run:
                name: Testing logic statemet with the other env_var_name
                command: |
                  echo "What about this?"
                  echo ${<< parameters.anothercondition >>}
                  

      
      - greeting:
          to: ${<< parameters.laconditionouioui >>}
          
      - greeting:
          to: ${<< parameters.anothercondition >>}
 
# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    jobs:
      - messer

