version: 2.1

orbs:
  detect: circleci/os-detect@0.3.0

commands: # a reusable command with parametersssssss
  greeting:
    parameters:
      to:
        default: "world"
        type: string
    steps:
      - run:
          name: Greetings
          command: echo "Hello <<parameters.to>>"
      
jobs:
  messer:
    parameters:
      expand:
        description: "To whom shall we say hello??"
        default: "<< pipeline.git.branch >>"
        type: string
      
      laconditionouioui:
        default: condition_needed_2
        type: env_var_name
        
      tag-or-branch:
        default: TAGANCH
        type: env_var_name
      
      laboule:
        default: true
        type: boolean
        
    docker:
      - image: circleci/node
    steps:
      - detect/init:
          extended: false
      - run :
          name: Second step
          command: |
              echo "Second step"
              #condition_needed_2=true
              echo "export condition_needed_2=true" >> $BASH_ENV
              source $BASH_ENV
              echo $condition_needed_2
              echo << parameters.laboule >>
          
      - when:
          condition:
            equal: [ "true", << parameters.laconditionouioui >> ]
          steps:
            - run:
                name: Testing env_var_name interpolation
                command: |
                  echo $condition_needed_2
                  echo << parameters.laboule >>
                  echo "Second "
                  echo "step"
                  echo "export COND_EXP=<< parameters.laconditionouioui >>" >> $BASH_ENV
                  echo $COND_EXP
                  
      - run:
          name: Tag or Branch
          command: |
              if [[ -z "<< pipeline.git.branch >>" ]]; then
                echo "export TAGANCH=<< pipeline.git.tag >>" >> $BASH_ENV
                #TAGANCH=<< pipeline.git.tag >>
                #else TAGANCH=<< pipeline.git.branch >>
                else echo "export TAGANCH=<< pipeline.git.branch >>" >> $BASH_ENV
              fi
              source $BASH_ENV
              echo $TAGANCH
      
      - greeting:
          to: << parameters.tag-or-branch >>
          
      - run :
          name: Third step
          command: |
              echo "Second "
              echo "step"
              echo << parameters.expand >>
              echo << pipeline.git.branch >>

# Orchestrate or schedule a set of jobs
workflows:
  # Name the workflow "welcome"
  welcome:
    jobs:
      - messer
